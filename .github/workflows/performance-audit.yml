name: Performance Audit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  performance-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest
        
      - name: Install Lighthouse
        run: npm install -g lighthouse
        
      - name: Start local server
        run: npx serve -s out &
        
      - name: Wait for server to start
        run: sleep 5
        
      - name: Run Lighthouse audit
        run: |
          lighthouse http://localhost:3000 \
            --chrome-flags="--headless --no-sandbox" \
            --output=json,html \
            --output-path=./lighthouse-report \
            --score=90
            
      - name: Check Lighthouse scores
        run: |
          PERFORMANCE=$(cat ./lighthouse-report.report.json | jq '.categories.performance.score * 100')
          ACCESSIBILITY=$(cat ./lighthouse-report.report.json | jq '.categories.accessibility.score * 100')
          BEST_PRACTICES=$(cat ./lighthouse-report.report.json | jq '.categories["best-practices"].score * 100')
          SEO=$(cat ./lighthouse-report.report.json | jq '.categories.seo.score * 100')
          
          echo "Performance: $PERFORMANCE"
          echo "Accessibility: $ACCESSIBILITY"
          echo "Best Practices: $BEST_PRACTICES"
          echo "SEO: $SEO"
          
          if (( $(echo "$PERFORMANCE < 90" | bc -l) )); then
            echo "Performance score below threshold: $PERFORMANCE"
            exit 1
          fi
          
          if (( $(echo "$ACCESSIBILITY < 90" | bc -l) )); then
            echo "Accessibility score below threshold: $ACCESSIBILITY"
            exit 1
          fi
          
          if (( $(echo "$BEST_PRACTICES < 90" | bc -l) )); then
            echo "Best Practices score below threshold: $BEST_PRACTICES"
            exit 1
          fi
          
          if (( $(echo "$SEO < 90" | bc -l) )); then
            echo "SEO score below threshold: $SEO"
            exit 1
          fi
          
      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: ./lighthouse-report.report.html
          
      - name: Bundle size analysis
        run: |
          echo "Analyzing bundle size..."
          find out -type f -name "*.js" | xargs ls -la | sort -k5 -nr | head -10
          
          # Calculate total JS size
          TOTAL_SIZE=$(find out -type f -name "*.js" -exec du -cb {} \; | grep total | awk '{print $1}')
          TOTAL_SIZE_MB=$(echo "scale=2; $TOTAL_SIZE/1024/1024" | bc)
          
          echo "Total JS bundle size: $TOTAL_SIZE_MB MB"
          
          # Fail if total size exceeds 2MB
          if (( $(echo "$TOTAL_SIZE_MB > 2.0" | bc -l) )); then
            echo "Bundle size exceeds threshold: $TOTAL_SIZE_MB MB (max: 2.0 MB)"
            exit 1
          fi
